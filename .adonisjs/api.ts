// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type AuthLoginGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/login_controller.ts').default['render'], false>
}
type AuthLoginPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['loginValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth/login_controller.ts').default['handle'], true>
}
type AuthRegisterGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/register_controller.ts').default['render'], false>
}
type AuthRegisterPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['registerValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth/register_controller.ts').default['handle'], true>
}
type AuthLogoutDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth/logout_controller.ts').default['handle'], false>
}
type RestaurantsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/restaurants/create_restaurant_controller.ts').default['render'], false>
}
type RestaurantsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/restaurant.ts')['createRestaurantValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/restaurants/create_restaurant_controller.ts').default['handle'], true>
}
type ApiV1GooglePlacesautocompletePost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/google.ts')['placeAutocompleteValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/google/place_autocomplete_controller.ts').default['handle'], true>
}
export interface ApiDefinition {
  'auth': {
    'login': {
      '$url': {
      };
      '$get': AuthLoginGetHead;
      '$head': AuthLoginGetHead;
      '$post': AuthLoginPost;
    };
    'register': {
      '$url': {
      };
      '$get': AuthRegisterGetHead;
      '$head': AuthRegisterGetHead;
      '$post': AuthRegisterPost;
    };
    'logout': {
      '$url': {
      };
      '$delete': AuthLogoutDelete;
    };
  };
  'restaurants': {
    '$url': {
    };
    '$get': RestaurantsGetHead;
    '$head': RestaurantsGetHead;
    '$post': RestaurantsPost;
  };
  'api': {
    'v1': {
      'google': {
        'places-autocomplete': {
          '$url': {
          };
          '$post': ApiV1GooglePlacesautocompletePost;
        };
      };
    };
  };
}
const routes = [
  {
    params: [],
    name: 'home.render',
    path: '/',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'auth.login.render',
    path: '/auth/login',
    method: ["GET","HEAD"],
    types: {} as AuthLoginGetHead,
  },
  {
    params: [],
    name: 'auth.login.handle',
    path: '/auth/login',
    method: ["POST"],
    types: {} as AuthLoginPost,
  },
  {
    params: [],
    name: 'auth.register.render',
    path: '/auth/register',
    method: ["GET","HEAD"],
    types: {} as AuthRegisterGetHead,
  },
  {
    params: [],
    name: 'auth.register.handle',
    path: '/auth/register',
    method: ["POST"],
    types: {} as AuthRegisterPost,
  },
  {
    params: [],
    name: 'auth.logout.handle',
    path: '/auth/logout',
    method: ["DELETE"],
    types: {} as AuthLogoutDelete,
  },
  {
    params: [],
    name: 'restaurants.create.render',
    path: '/restaurants',
    method: ["GET","HEAD"],
    types: {} as RestaurantsGetHead,
  },
  {
    params: [],
    name: 'restaurants.create.handle',
    path: '/restaurants',
    method: ["POST"],
    types: {} as RestaurantsPost,
  },
  {
    params: [],
    name: 'api.google.autocomplete',
    path: '/api/v1/google/places-autocomplete',
    method: ["POST"],
    types: {} as ApiV1GooglePlacesautocompletePost,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
declare module '@tuyau/inertia/types' {
  type InertiaApi = typeof api
  export interface Api extends InertiaApi {}
}
